// prisma/schema.prisma

/**
 * -- เชื่อมต่อ DB - Neon --
 */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL") // ✅ ใช้ DATABASE_URL
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL") // ✅ ถ้ามี shadow
}

/**
 * -- Models อื่นๆ ที่ใช้ใน Project --
 */

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String?  @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([phone])
}

enum Role {
  SYSTEM
  ADMIN
  MANAGER
  ASSISTANT_MANAGER
  STAFF
}

enum DomainStatus {
  ACTIVE
  INACTIVE
  PENDING
}

model Domain {
  id        String       @id @default(cuid())
  name      String       @unique
  note      String?
  status    DomainStatus @default(PENDING)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model HostProvider {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hosts Host[]
}

model HostGroup {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  hosts Host[]
}

enum HostStatus {
  ACTIVE
  INACTIVE
}

// HostType ---
model HostType {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hosts     Host[]
}

// --- Host ---
model Host {
  id     String     @id @default(cuid())
  name   String     @unique
  ip     String?
  note   String?
  status HostStatus @default(ACTIVE)

  providerId String?
  provider   HostProvider? @relation(fields: [providerId], references: [id])

  groupId String?
  group   HostGroup? @relation(fields: [groupId], references: [id])

  typeId String?
  type   HostType? @relation(fields: [typeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([providerId])
  @@index([groupId])
  @@index([typeId])
}
