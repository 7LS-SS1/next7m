generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  phone     String?  @unique
  role      String   @default("USER")

  @@index([email])
  @@index([phone])
}

model Domain {
  id               String        @id @default(cuid())
  name             String        @unique
  note             String?
  status           DomainStatus  @default(PENDING)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  expiresAt        DateTime      @default(dbgenerated("(now() + '1 year'::interval)"))
  registeredAt     DateTime      @default(now())
  activeStatus     Boolean?       @default(true)
  price            Float?
  cloudflareMailId String?
  domainMailId     String?
  hostId           String?
  hostMailId       String?
  hostTypeId       String?
  redirect         Boolean       @default(false)
  teamId           String?
  wordpressInstall Boolean       @default(false)
  cloudflareMail   EmailAccount? @relation("CloudflareMail", fields: [cloudflareMailId], references: [id])
  domainMail       EmailAccount? @relation("DomainMail", fields: [domainMailId], references: [id])
  host             HostProvider? @relation(fields: [hostId], references: [id])
  hostMail         EmailAccount? @relation("HostMail", fields: [hostMailId], references: [id])
  hostType         HostType?     @relation(fields: [hostTypeId], references: [id])
  team             Team?         @relation(fields: [teamId], references: [id])

  @@index([name])
  @@index([status])
  @@index([registeredAt])
  @@index([expiresAt])
  @@index([hostId])
  @@index([hostTypeId])
  @@index([domainMailId])
  @@index([hostMailId])
  @@index([cloudflareMailId])
  @@index([teamId])
}

model HostProvider {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  note      String?
  domains   Domain[]
}

model HostType {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  domains   Domain[]
}

model Project {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  note      String?
  domains   Domain[]
}

model EmailAccount {
  id                  String   @id @default(cuid())
  address             String   @unique
  provider            String
  note                String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  domainsAsCloudflare Domain[] @relation("CloudflareMail")
  domainsAsDomainMail Domain[] @relation("DomainMail")
  domainsAsHostMail   Domain[] @relation("HostMail")
}

model Program {
  id            String   @id @default(cuid())
  name          String   @db.VarChar(200)
  version       String?  @db.VarChar(50)
  vendor        String?  @db.VarChar(120)
  category      String   @default("Misc.") @db.VarChar(50)
  content       String?
  iconUrl       String?
  fileUrl       String?
  recommended   Boolean  @default(false)
  isRecommended Boolean  @default(false)
  featured      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  slug          String?  @unique @db.VarChar(120)

  @@unique([name, version])
  @@index([category])
  @@index([vendor])
  @@index([updatedAt])
}

model Plugin {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(200)
  version     String?  @db.VarChar(50)
  vendor      String?  @db.VarChar(120)
  pluginType  String?  @db.VarChar(50)
  category    String   @default("Misc.") @db.VarChar(50)
  content     String?
  iconUrl     String?
  fileUrl     String?
  recommended Boolean  @default(false)
  featured    Boolean  @default(false)
  slug        String?  @unique @db.VarChar(120)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([name, version])
  @@index([category])
  @@index([vendor])
  @@index([updatedAt])
}

enum Role {
  SYSTEM
  ADMIN
  MANAGER
  ASSISTANT_MANAGER
  STAFF
}

enum DomainStatus {
  ACTIVE
  INACTIVE
  PENDING
}
