// prisma/schema.prisma

/**
 * -- เชื่อมต่อ DB - Neon --
 */

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//* -- Models อื่นๆ ที่ใช้ใน Project -- */

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  phone     String?  @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([phone])
}

enum Role {
  SYSTEM
  ADMIN
  MANAGER
  ASSISTANT_MANAGER
  STAFF
}

// --- Domains ---

model Domain {
  id        String       @id @default(cuid())
  name      String       @unique
  note      String?
  status    DomainStatus @default(PENDING)

  // วันจดและวันหมดอายุ
  registeredAt DateTime  @default(now()) // วันที่จด
  expiresAt    DateTime  @default(dbgenerated("now() + interval '1 year'")) // วันหมดอายุ (registeredAt + 1 ปี)

  // ความสัมพันธ์
  hostId       String?
  host         HostProvider? @relation(fields: [hostId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  hostTypeId   String?
  hostType     HostType? @relation(fields: [hostTypeId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  domainMailId String?
  domainMail   EmailAccount? @relation("DomainMail", fields: [domainMailId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  hostMailId   String?
  hostMail     EmailAccount? @relation("HostMail", fields: [hostMailId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  cloudflareMailId String?
  cloudflareMail   EmailAccount? @relation("CloudflareMail", fields: [cloudflareMailId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  teamId       String?
  team         Team? @relation(fields: [teamId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  wordpressInstall Boolean @default(false)
  activeStatus     Boolean @default(true)

  statusCode   Int     @default(200) // เช่น 200,301,404
  redirect     Boolean @default(false)

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([name])
  @@index([status])
  @@index([registeredAt])
  @@index([expiresAt])
  @@index([hostId])
  @@index([hostTypeId])
  @@index([domainMailId])
  @@index([hostMailId])
  @@index([cloudflareMailId])
  @@index([teamId])
}

enum DomainStatus {
  ACTIVE
  INACTIVE
  PENDING
}

// --- End Domains ---

// --- Hosts ---

model HostProvider {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  domains   Domain[]
}

model HostType {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  domains   Domain[]
}

// --- End Hosts ---

// --- Menagements ---

model Project {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(cuid())
  name      String   @unique
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  domains   Domain[]
}

model EmailAccount {
  id        String   @id @default(cuid())
  address   String   @unique
  provider  String
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // ความสัมพันธ์ reverse
  domainsAsDomainMail   Domain[] @relation("DomainMail")
  domainsAsHostMail     Domain[] @relation("HostMail")
  domainsAsCloudflare   Domain[] @relation("CloudflareMail")
}

// --- End Menagements ---

// --- Program ---

model Program {
  id            String   @id @default(cuid())
  name          String   @db.VarChar(200)
  version       String?  @db.VarChar(50)
  vendor        String?  @db.VarChar(120)
  category      String   @default("Misc.") @db.VarChar(50)
  content       String?  @db.Text
  iconUrl       String?  @db.Text
  fileUrl       String?  @db.Text
  recommended   Boolean  @default(false)
  isRecommended Boolean  @default(false)
  featured      Boolean  @default(false)
  slug          String?  @unique @db.VarChar(120)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([name, version])
  @@index([category])
  @@index([vendor])
  @@index([updatedAt])
}

// --- End Program ---

// --- Plugin ---

model Plugin {
  id         String  @id @default(cuid())
  name       String  @db.VarChar(200)
  version    String? @db.VarChar(50)
  vendor     String? @db.VarChar(120)
  pluginType String? @db.VarChar(50)
  category   String  @default("Misc.") @db.VarChar(50)

  content String? @db.Text
  iconUrl String? @db.Text
  fileUrl String? @db.Text

  recommended Boolean @default(false)
  featured    Boolean @default(false)

  slug String? @unique @db.VarChar(120)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, version])
  @@index([category])
  @@index([vendor])
  @@index([updatedAt])
}

// --- End Plugin ---
